/*
 * Ledgera core API
 * Ledgera servers.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ExceptionEntityNotFound;
import org.openapitools.client.model.HelperPaginatedArrayLedgerBalance;
import org.openapitools.client.model.HelperPaginatedArrayLedgerCurrency;
import org.openapitools.client.model.HelperPaginatedArrayLedgerJournalEntry;
import org.openapitools.client.model.HelperPaginatedLedgerAccount;
import org.openapitools.client.model.HttpCurrencyParams;
import org.openapitools.client.model.HttpHttpUnprocessableEntity;
import org.openapitools.client.model.HttpRegisterAccount;
import org.openapitools.client.model.LedgerAccount;
import org.openapitools.client.model.LedgerCurrency;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountApi
 */
@Disabled
public class AccountApiTest {

    private final AccountApi api = new AccountApi();

    /**
     * Get a account balances
     *
     * Get account balances
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1AccountIdBalancesGetTest() throws ApiException {
        String id = null;
        HelperPaginatedArrayLedgerBalance response = api.v1AccountIdBalancesGet(id);
        // TODO: test validations
    }

    /**
     * Get a account from id
     *
     * Get account account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1AccountIdGetTest() throws ApiException {
        String id = null;
        HelperPaginatedLedgerAccount response = api.v1AccountIdGet(id);
        // TODO: test validations
    }

    /**
     * Get a account journal
     *
     * Get account journal
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1AccountIdJournalGetTest() throws ApiException {
        String id = null;
        String cursor = null;
        String dateFrom = null;
        String dateTo = null;
        String type = null;
        Integer limit = null;
        HelperPaginatedArrayLedgerJournalEntry response = api.v1AccountIdJournalGet(id, cursor, dateFrom, dateTo, type, limit);
        // TODO: test validations
    }

    /**
     * Create a account
     *
     * Create account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1AccountPostTest() throws ApiException {
        HttpRegisterAccount account = null;
        LedgerAccount response = api.v1AccountPost(account);
        // TODO: test validations
    }

    /**
     * Get a ledger currencies
     *
     * Get ledger currencies
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1CurrencyGetTest() throws ApiException {
        HelperPaginatedArrayLedgerCurrency response = api.v1CurrencyGet();
        // TODO: test validations
    }

    /**
     * Get a ledger currencies
     *
     * Get ledger currencies
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1CurrencyPostTest() throws ApiException {
        HttpCurrencyParams currency = null;
        LedgerCurrency response = api.v1CurrencyPost(currency);
        // TODO: test validations
    }

}
